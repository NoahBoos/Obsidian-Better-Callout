/* Crédit en français
Copyright (c) 2024 Noah Boos (aka Rift).
Ce code est protégé par les droits d'auteurs, vos droits à l'égard de ce code sont définis par la license accompagné avec le projet.
Voir le fichier "LICENSE.md" pour plus d'informations. Il devrait être situé à la racine du projet.

Code source original de Noah Boos (aka Rift).
Ce fichier fait partie du projet "Better Callout".
*/

/* English credits
Copyright (c) 2024 Noah Boos (aka Rift).
This code is protected by copyright law. Your rights regarding this code are defined by the accompanying license.
Please refer to the file named "LICENSE.md" for more information.

Original source code from Noah Boos (aka Rift). This code should be located in the root directory of the project.
This file is part of the "Better Callout" project.
*/

/* GitHub Repository : https://github.com/NoahBoos/Obsidian-Better-Callout */

body {
  /* Global Variables */
  --mbr-white-hex: #FFFFFF;
  --mbr-white-rgb: 255, 255, 255;
  --mbr-black-hex: #000000;
  --mbr-black-rgb: 0, 0, 0;
  --mbr-callout-opacity: 0.1;
}

body.theme-light {
  /* Light Theme Variables */
  --mbr-red-hex: #fb464c;
  --mbr-red-rgb: 251, 70, 76;
  --mbr-orange-hex: #e9973f;
  --mbr-orange-rgb: 233, 151, 63;
  --mbr-yellow-hex: #e0de71;
  --mbr-yellow-rgb: 224, 222, 113;
  --mbr-green-hex: #44cf6e;
  --mbr-green-rgb: 68, 207, 110;
  --mbr-blue-hex: #027aff;
  --mbr-blue-rgb: 2, 122, 255;
  --mbr-purple-hex: #a882ff;
  --mbr-purple-rgb: 168, 130, 255;
  --mbr-pink-hex: #fa99cd;
  --mbr-pink-rgb: 250, 153, 205;
}

body.theme-dark {
  /* Dark Theme Variables */
  --mbr-red-hex: #fb464c;
  --mbr-red-rgb: 251, 70, 76;
  --mbr-orange-hex: #e9973f;
  --mbr-orange-rgb: 233, 151, 63;
  --mbr-yellow-hex: #e0de71;
  --mbr-yellow-rgb: 224, 222, 113;
  --mbr-green-hex: #44cf6e;
  --mbr-green-rgb: 68, 207, 110;
  --mbr-blue-hex: #027aff;
  --mbr-blue-rgb: 2, 122, 255;
  --mbr-purple-hex: #a882ff;
  --mbr-purple-rgb: 168, 130, 255;
  --mbr-pink-hex: #fa99cd;
  --mbr-pink-rgb: 250, 153, 205;
}


/* Default callout dimensions management. */
.callout {
  padding: 0px;
}

.callout>.callout-title {
  padding: 1rem 1.5rem 1rem 1.5rem;
}

.callout>.callout-content {
  padding: 0px 1.5rem 0px 1.5rem;
}

.callout>.callout-content>*:first-child {
  margin-top: 0px;
}

/* Default callout dimensions management if it has border. */
.callout[data-callout-metadata*=border]>.callout-content>*:first-child {
  margin-top: 1rem;
}

/* Setting default opacity to "Custom Callout - Variables.css" opacity variable. */
.callout {
  background-color: rgba(var(--callout-color), var(--mbr-callout-opacity));
}


/* Hiding header. */
.callout[data-callout-metadata~=no-header]>.callout-title {
  display: none;
}

.callout[data-callout-metadata~=no-header]>.callout-content *:first-child {
  margin-top: 1rem;
}

/* Hiding header icon. */
.callout[data-callout-metadata~=no-icon]>.callout-title>.callout-icon {
  display: none;
}

/* White Pen */
.callout[data-callout-metadata~=pen-white]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-white-hex);
}

.callout[data-callout-metadata~=pen-white]>.callout-title>.callout-title-inner {
  color: var(--mbr-white-hex);
  --callout-title-color: var(--mbr-white-hex);
}

.callout[data-callout-metadata~=pen-white]>.callout-content {
  color: var(--mbr-white-hex);
}

/* Black Pen */
.callout[data-callout-metadata~=pen-black]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-black-hex);
}

.callout[data-callout-metadata~=pen-black]>.callout-title>.callout-title-inner {
  color: var(--mbr-black-hex);
  --callout-title-color: var(--mbr-black-hex);
}

.callout[data-callout-metadata~=pen-black]>.callout-content {
  color: var(--mbr-black-hex);
}

/* Red Pen */
.callout[data-callout-metadata~=pen-red]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-red-hex);
}

.callout[data-callout-metadata~=pen-red]>.callout-title>.callout-title-inner {
  color: var(--mbr-red-hex);
  --callout-title-color: var(--mbr-red-hex);
}

.callout[data-callout-metadata~=pen-red]>.callout-content {
  color: var(--mbr-red-hex);
}

/* Orange Pen */
.callout[data-callout-metadata~=pen-orange]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-orange-hex);
}

.callout[data-callout-metadata~=pen-orange]>.callout-title>.callout-title-inner {
  color: var(--mbr-orange-hex);
  --callout-title-color: var(--mbr-orange-hex);
}

.callout[data-callout-metadata~=pen-orange]>.callout-content {
  color: var(--mbr-orange-hex);
}

/* Yellow Pen */
.callout[data-callout-metadata~=pen-yellow]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-yellow-hex);
}

.callout[data-callout-metadata~=pen-yellow]>.callout-title>.callout-title-inner {
  color: var(--mbr-yellow-hex);
  --callout-title-color: var(--mbr-yellow-hex);
}

.callout[data-callout-metadata~=pen-yellow]>.callout-content {
  color: var(--mbr-yellow-hex);
}

/* Green Pen */
.callout[data-callout-metadata~=pen-green]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-green-hex);
}

.callout[data-callout-metadata~=pen-green]>.callout-title>.callout-title-inner {
  color: var(--mbr-green-hex);
  --callout-title-color: var(--mbr-green-hex);
}

.callout[data-callout-metadata~=pen-green]>.callout-content {
  color: var(--mbr-green-hex);
}

/* Blue Pen */
.callout[data-callout-metadata~=pen-blue]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-blue-hex);
}

.callout[data-callout-metadata~=pen-blue]>.callout-title>.callout-title-inner {
  color: var(--mbr-blue-hex);
  --callout-title-color: var(--mbr-blue-hex);
}

.callout[data-callout-metadata~=pen-blue]>.callout-content {
  color: var(--mbr-blue-hex);
}

/* Purple Pen */
.callout[data-callout-metadata~=pen-purple]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-purple-hex);
}

.callout[data-callout-metadata~=pen-purple]>.callout-title>.callout-title-inner {
  color: var(--mbr-purple-hex);
  --callout-title-color: var(--mbr-purple-hex);
}

.callout[data-callout-metadata~=pen-purple]>.callout-content {
  color: var(--mbr-purple-hex);
}

/* Pink Pen */
.callout[data-callout-metadata~=pen-pink]>.callout-title>.callout-icon>svg {
  stroke: var(--mbr-pink-hex);
}

.callout[data-callout-metadata~=pen-pink]>.callout-title>.callout-title-inner {
  color: var(--mbr-pink-hex);
  --callout-title-color: var(--mbr-pink-hex);
}

.callout[data-callout-metadata~=pen-pink]>.callout-content {
  color: var(--mbr-pink-hex);
}


/* Center text. */
.callout[data-callout-metadata~=text-center]>.callout-content *:not(li) {
  text-align: center;
}

/* Justify text. */
.callout[data-callout-metadata~=text-justify]>.callout-content * {
  text-align: justify;
}

/* Centering header's content. */
.callout[data-callout-metadata~=header-centered]>.callout-title {
  justify-content: center;
  align-items: center;
}

/* Align header's content on the right. */
.callout[data-callout-metadata~=header-right]>.callout-title {
  justify-content: right !important;
  align-items: center;
}

/* Display header's content in reverse. */
.callout[data-callout-metadata~=header-reverse]>.callout-title {
  flex-direction: row-reverse;
  justify-content: start;
}

.callout[data-callout-metadata~=header-reverse]>.callout-title>.callout-fold {
  padding: 0px 0px 0px 0px;
}

.callout[data-callout-metadata~=header-reverse]>.callout-title>.callout-fold.is-collapsed {
  transform: scaleX(-1);
  padding: 0px 0px 0px 0px;
}

/* Center content's block. */
.callout[data-callout-metadata~=content-center]>.callout-content>* {
  width: fit-content;
  margin: auto auto 1rem auto;
}

/* Change callout opacity to 10%. */
.callout[data-callout-metadata~=opacity-10] {
  --mbr-callout-opacity: 0.1;
}

/* Change callout opacity to 20%. */
.callout[data-callout-metadata~=opacity-20] {
  --mbr-callout-opacity: 0.2;
}

/* Change callout opacity to 30%. */
.callout[data-callout-metadata~=opacity-30] {
  --mbr-callout-opacity: 0.3;
}

/* Change callout opacity to 40%. */
.callout[data-callout-metadata~=opacity-40] {
  --mbr-callout-opacity: 0.4;
}

/* Change callout opacity to 50%. */
.callout[data-callout-metadata~=opacity-50] {
  --mbr-callout-opacity: 0.5;
}

/* Change callout opacity to 60%. */
.callout[data-callout-metadata~=opacity-60] {
  --mbr-callout-opacity: 0.6;
}

/* Change callout opacity to 70%. */
.callout[data-callout-metadata~=opacity-70] {
  --mbr-callout-opacity: 0.7;
}

/* Change callout opacity to 80%. */
.callout[data-callout-metadata~=opacity-80] {
  --mbr-callout-opacity: 0.8;
}

/* Change callout opacity to 90%. */
.callout[data-callout-metadata~=opacity-90] {
  --mbr-callout-opacity: 0.9;
}

/* Change callout opacity to 100%. */
.callout[data-callout-metadata~=opacity-100] {
  --mbr-callout-opacity: 1.0;
}

/* White background */
.callout[data-callout-metadata~=bg-white] {
  background-color: rgba(var(--mbr-white-rgb), var(--mbr-callout-opacity));
}

/* Black background */
.callout[data-callout-metadata~=bg-black] {
  background-color: rgba(var(--mbr-black-rgb), var(--mbr-callout-opacity));
}

/* Red background */
.callout[data-callout-metadata~=bg-red] {
  background-color: rgba(var(--mbr-red-rgb), var(--mbr-callout-opacity));
}

/* Orange background */
.callout[data-callout-metadata~=bg-orange] {
  background-color: rgba(var(--mbr-orange-rgb), var(--mbr-callout-opacity));
}

/* Yellow background */
.callout[data-callout-metadata~=bg-yellow] {
  background-color: rgba(var(--mbr-yellow-rgb), var(--mbr-callout-opacity));
}

/* Green background */
.callout[data-callout-metadata~=bg-green] {
  background-color: rgba(var(--mbr-green-rgb), var(--mbr-callout-opacity));
}

/* Blue background */
.callout[data-callout-metadata~=bg-blue] {
  background-color: rgba(var(--mbr-blue-rgb), var(--mbr-callout-opacity));
}

/* Purple background */
.callout[data-callout-metadata~=bg-purple] {
  background-color: rgba(var(--mbr-purple-rgb), var(--mbr-callout-opacity));
}

/* Pink background */
.callout[data-callout-metadata~=bg-pink] {
  background-color: rgba(var(--mbr-pink-rgb), var(--mbr-callout-opacity));
}

/* Set a border-width of each pixel width mentionned in the following variable. If standing alone, automatically build a solid border around the container it's applied to. */
.callout[data-callout-metadata~=border-width-1px] {
  border-width: 1px;
}

.callout[data-callout-metadata~=border-width-2px] {
  border-width: 2px;
}

.callout[data-callout-metadata~=border-width-3px] {
  border-width: 3px;
}

.callout[data-callout-metadata~=border-width-4px] {
  border-width: 4px;
}

.callout[data-callout-metadata~=border-width-5px] {
  border-width: 5px;
}

/* Set a border-type of each border-type mentionned in the following variable. */
.callout[data-callout-metadata~=border-style-solid] {
  border-style: solid;
}

.callout[data-callout-metadata~=border-top-style-solid] {
  border-top-style: solid;
}

.callout[data-callout-metadata~=border-right-style-solid] {
  border-right-style: solid;
}

.callout[data-callout-metadata~=border-bottom-style-solid] {
  border-bottom-style: solid;
}

.callout[data-callout-metadata~=border-left-style-solid] {
  border-left-style: solid;
}

.callout[data-callout-metadata~=border-style-double] {
  border-style: double;
}

.callout[data-callout-metadata~=border-top-style-double] {
  border-top-style: double;
}

.callout[data-callout-metadata~=border-right-style-double] {
  border-right-style: double;
}

.callout[data-callout-metadata~=border-bottom-style-double] {
  border-bottom-style: double;
}

.callout[data-callout-metadata~=border-left-style-double] {
  border-left-style: double;
}

.callout[data-callout-metadata~=border-style-dashed] {
  border-style: dashed;
}

.callout[data-callout-metadata~=border-top-style-dashed] {
  border-top-style: dashed;
}

.callout[data-callout-metadata~=border-right-style-dashed] {
  border-right-style: dashed;
}

.callout[data-callout-metadata~=border-bottom-style-dashed] {
  border-bottom-style: dashed;
}

.callout[data-callout-metadata~=border-left-style-dashed] {
  border-left-style: dashed;
}

.callout[data-callout-metadata~=border-style-dotted] {
  border-style: dotted;
}

.callout[data-callout-metadata~=border-top-style-dotted] {
  border-top-style: dotted;
}

.callout[data-callout-metadata~=border-right-style-dotted] {
  border-right-style: dotted;
}

.callout[data-callout-metadata~=border-bottom-style-dotted] {
  border-bottom-style: dotted;
}

.callout[data-callout-metadata~=border-left-style-dotted] {
  border-left-style: dotted;
}